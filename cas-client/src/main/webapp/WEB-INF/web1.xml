<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_5.xsd"
	version="2.5">

	<display-name>Demo webapp protected by the Java Jasig / Apereo CAS client</display-name>

	<listener>
		<listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
	</listener>

	<filter>
		<filter-name>CAS Single Sign Out Filter</filter-name>
		<filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<!--<param-value>http://cas-server:8488/cas</param-value>-->
			<param-value>http://cas-server/cas</param-value>
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>http://cas-client:8080</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CAS Single Sign Out Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>CAS Validation Filter</filter-name>
		<filter-class>org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>
		<init-param>
			<param-name>casServerUrlPrefix</param-name>
			<!--<param-value>http://cas-server:8488/cas</param-value>-->
			<param-value>http://cas-server</param-value>
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>http://cas-client:8080</param-value>
		</init-param>

		<!-- 配置代理其他客户端 start -->
		<init-param>
			<param-name>proxyCallbackUrl</param-name>
			<param-value>http://cas-client:8080/proxyCallback</param-value>
		</init-param>
		<init-param>
			<param-name>proxyReceptorUrl</param-name>
			<param-value>/proxyCallback</param-value>
		</init-param>
		<!-- 配置代理其他客户端 end -->

		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>useSession</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>redirectAfterValidation</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<!-- /proxyCallback这个filter-mapping一定要配在其它mapping之前 -->
	<filter-mapping>
		<filter-name>CAS Validation Filter</filter-name>
		<url-pattern>/proxyCallback</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CAS Validation Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>CAS Filter</filter-name>
		<filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>
		<init-param>
			<param-name>casServerLoginUrl</param-name>
			<!--<param-value>http://cas-server:8488/cas/login</param-value>-->
			<param-value>http://cas-server/login</param-value>
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>http://cas-client:8080</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CAS Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
		<filter-class>org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!--
    该过滤器使得开发者可以通过org.jasig.cas.client.util.AssertionHolder来获取用户的登录名。
    比如AssertionHolder.getAssertion().getPrincipal().getName()。
    -->
	<!--<filter>-->
		<!--<filter-name>CAS Assertion Thread Local Filter</filter-name>-->
		<!--<filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class>-->
	<!--</filter>-->
	<!--<filter-mapping>-->
		<!--<filter-name>CAS Assertion Thread Local Filter</filter-name>-->
		<!--<url-pattern>*</url-pattern>-->
	<!--</filter-mapping>-->

	<servlet>
		<servlet-name>ServletDemo1</servlet-name>
		<servlet-class>com.hundsun.cas.Servlet1</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ServletDemo1</servlet-name>
		<url-pattern>/servlet/ServletDemo1</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>OAuthServlet</servlet-name>
		<servlet-class>com.hundsun.cas.OAuthServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>OAuthServlet</servlet-name>
		<url-pattern>/servlet/OAuthServlet</url-pattern>
	</servlet-mapping>

</web-app>
